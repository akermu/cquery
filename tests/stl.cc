#include <assert.h>
#include <complex.h>
#include <ctype.h>
#include <errno.h>
#include <fenv.h>
#include <float.h>
#include <inttypes.h>
#include <iso646.h>
#include <limits.h>
#include <locale.h>
#include <math.h>
#include <setjmp.h>
#include <signal.h>
#include <stdalign.h>
#include <stdarg.h>
#include <stdatomic.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdnoreturn.h>
#include <string.h>
#include <tgmath.h>
#include <time.h>
#include <uchar.h>
#include <wchar.h>
#include <wctype.h>


#include <string>
#include <xiosbase>
#include <algorithm>
#include <type_traits>
#include <iterator>
#include <stdlib.h>
#include <cstddef>
#include <cmath>
#include <set>
#include <iosfwd>
#include <streambuf>
#include <ostream>
#include <fstream>
#include <memory>
#include <stdexcept>
#include <vector>
#include <sstream>
#include <iomanip>
#include <limits>
#include <tuple>
#include <cstdlib>
#include <csignal>
#include <csetjmp>
#include <cstdarg>
#include <typeinfo>
#include <typeindex>
#include <type_traits>
#include <bitset>
#include <functional>
#include <utility>
#include <ctime>
#include <chrono>
#include <cstddef>
#include <initializer_list>
#include <tuple>
#include <any>
#include <optional>
#include <variant>
#include <new>
#include <memory>
#include <scoped_allocator>
#include <memory_resource>
#include <climits>
#include <cfloat>
#include <cstdint>
#include <cinttypes>
#include <limits>
#include <exception>
#include <stdexcept>
#include <cassert>
#include <system_error>
#include <cerrno>
#include <cctype>
#include <cwctype>
#include <cstring>
#include <cwchar>
#include <cuchar>
#include <string>
#include <string_view>
#include <array>
#include <vector>
#include <deque>
#include <list>
#include <forward_list>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <stack>
#include <queue>
#include <algorithm>
#include <execution>
#include <iterator>
#include <cmath>
#include <complex>
#include <valarray>
#include <random>
#include <numeric>
#include <ratio>
#include <cfenv>
#include <iosfwd>
#include <ios>
#include <istream>
#include <ostream>
#include <iostream>
#include <fstream>
#include <sstream>
#include <strstream>
#include <iomanip>
#include <streambuf>
#include <cstdio>
#include <locale>
#include <clocale>
#include <codecvt>
#include <regex>
#include <atomic>
#include <thread>
#include <mutex>
#include <shared_mutex>
#include <future>
#include <condition_variable>
#include <filesystem>

/*
OUTPUT:
{
  "includes": [{
      "line": 1,
      "resolved_path": "&assert.h"
    }, {
      "line": 2,
      "resolved_path": "&complex.h"
    }, {
      "line": 3,
      "resolved_path": "&ctype.h"
    }, {
      "line": 4,
      "resolved_path": "&errno.h"
    }, {
      "line": 5,
      "resolved_path": "&fenv.h"
    }, {
      "line": 6,
      "resolved_path": "&float.h"
    }, {
      "line": 7,
      "resolved_path": "&inttypes.h"
    }, {
      "line": 8,
      "resolved_path": "&iso646.h"
    }, {
      "line": 9,
      "resolved_path": "&limits.h"
    }, {
      "line": 10,
      "resolved_path": "&locale.h"
    }, {
      "line": 11,
      "resolved_path": "&math.h"
    }, {
      "line": 12,
      "resolved_path": "&setjmp.h"
    }, {
      "line": 13,
      "resolved_path": "&signal.h"
    }, {
      "line": 14,
      "resolved_path": "&stdalign.h"
    }, {
      "line": 15,
      "resolved_path": "&stdarg.h"
    }, {
      "line": 16,
      "resolved_path": "&stdatomic.h"
    }, {
      "line": 17,
      "resolved_path": "&stdbool.h"
    }, {
      "line": 18,
      "resolved_path": "&stddef.h"
    }, {
      "line": 19,
      "resolved_path": "&stdint.h"
    }, {
      "line": 20,
      "resolved_path": "&stdio.h"
    }, {
      "line": 21,
      "resolved_path": "&stdlib.h"
    }, {
      "line": 22,
      "resolved_path": "&stdnoreturn.h"
    }, {
      "line": 23,
      "resolved_path": "&string.h"
    }, {
      "line": 24,
      "resolved_path": "&tgmath.h"
    }, {
      "line": 25,
      "resolved_path": "&time.h"
    }, {
      "line": 26,
      "resolved_path": "&uchar.h"
    }, {
      "line": 27,
      "resolved_path": "&wchar.h"
    }, {
      "line": 28,
      "resolved_path": "&wctype.h"
    }, {
      "line": 31,
      "resolved_path": "&string"
    }, {
      "line": 32,
      "resolved_path": "&xiosbase"
    }, {
      "line": 33,
      "resolved_path": "&algorithm"
    }, {
      "line": 34,
      "resolved_path": "&type_traits"
    }, {
      "line": 35,
      "resolved_path": "&iterator"
    }, {
      "line": 36,
      "resolved_path": "&stdlib.h"
    }, {
      "line": 37,
      "resolved_path": "&cstddef"
    }, {
      "line": 38,
      "resolved_path": "&cmath"
    }, {
      "line": 39,
      "resolved_path": "&set"
    }, {
      "line": 40,
      "resolved_path": "&iosfwd"
    }, {
      "line": 41,
      "resolved_path": "&streambuf"
    }, {
      "line": 42,
      "resolved_path": "&ostream"
    }, {
      "line": 43,
      "resolved_path": "&fstream"
    }, {
      "line": 44,
      "resolved_path": "&memory"
    }, {
      "line": 45,
      "resolved_path": "&stdexcept"
    }, {
      "line": 46,
      "resolved_path": "&vector"
    }, {
      "line": 47,
      "resolved_path": "&sstream"
    }, {
      "line": 48,
      "resolved_path": "&iomanip"
    }, {
      "line": 49,
      "resolved_path": "&limits"
    }, {
      "line": 50,
      "resolved_path": "&tuple"
    }, {
      "line": 51,
      "resolved_path": "&cstdlib"
    }, {
      "line": 52,
      "resolved_path": "&csignal"
    }, {
      "line": 53,
      "resolved_path": "&csetjmp"
    }, {
      "line": 54,
      "resolved_path": "&cstdarg"
    }, {
      "line": 55,
      "resolved_path": "&typeinfo"
    }, {
      "line": 56,
      "resolved_path": "&typeindex"
    }, {
      "line": 57,
      "resolved_path": "&type_traits"
    }, {
      "line": 58,
      "resolved_path": "&bitset"
    }, {
      "line": 59,
      "resolved_path": "&functional"
    }, {
      "line": 60,
      "resolved_path": "&utility"
    }, {
      "line": 61,
      "resolved_path": "&ctime"
    }, {
      "line": 62,
      "resolved_path": "&chrono"
    }, {
      "line": 63,
      "resolved_path": "&cstddef"
    }, {
      "line": 64,
      "resolved_path": "&initializer_list"
    }, {
      "line": 65,
      "resolved_path": "&tuple"
    }, {
      "line": 66,
      "resolved_path": "&any"
    }, {
      "line": 67,
      "resolved_path": "&optional"
    }, {
      "line": 68,
      "resolved_path": "&variant"
    }, {
      "line": 69,
      "resolved_path": "&new"
    }, {
      "line": 70,
      "resolved_path": "&memory"
    }, {
      "line": 71,
      "resolved_path": "&scoped_allocator"
    }, {
      "line": 73,
      "resolved_path": "&climits"
    }, {
      "line": 74,
      "resolved_path": "&cfloat"
    }, {
      "line": 75,
      "resolved_path": "&cstdint"
    }, {
      "line": 76,
      "resolved_path": "&cinttypes"
    }, {
      "line": 77,
      "resolved_path": "&limits"
    }, {
      "line": 78,
      "resolved_path": "&exception"
    }, {
      "line": 79,
      "resolved_path": "&stdexcept"
    }, {
      "line": 80,
      "resolved_path": "&cassert"
    }, {
      "line": 81,
      "resolved_path": "&system_error"
    }, {
      "line": 82,
      "resolved_path": "&cerrno"
    }, {
      "line": 83,
      "resolved_path": "&cctype"
    }, {
      "line": 84,
      "resolved_path": "&cwctype"
    }, {
      "line": 85,
      "resolved_path": "&cstring"
    }, {
      "line": 86,
      "resolved_path": "&cwchar"
    }, {
      "line": 87,
      "resolved_path": "&cuchar"
    }, {
      "line": 88,
      "resolved_path": "&string"
    }, {
      "line": 89,
      "resolved_path": "&string_view"
    }, {
      "line": 90,
      "resolved_path": "&array"
    }, {
      "line": 91,
      "resolved_path": "&vector"
    }, {
      "line": 92,
      "resolved_path": "&deque"
    }, {
      "line": 93,
      "resolved_path": "&list"
    }, {
      "line": 94,
      "resolved_path": "&forward_list"
    }, {
      "line": 95,
      "resolved_path": "&set"
    }, {
      "line": 96,
      "resolved_path": "&map"
    }, {
      "line": 97,
      "resolved_path": "&unordered_set"
    }, {
      "line": 98,
      "resolved_path": "&unordered_map"
    }, {
      "line": 99,
      "resolved_path": "&stack"
    }, {
      "line": 100,
      "resolved_path": "&queue"
    }, {
      "line": 101,
      "resolved_path": "&algorithm"
    }, {
      "line": 103,
      "resolved_path": "&iterator"
    }, {
      "line": 104,
      "resolved_path": "&cmath"
    }, {
      "line": 105,
      "resolved_path": "&complex"
    }, {
      "line": 106,
      "resolved_path": "&valarray"
    }, {
      "line": 107,
      "resolved_path": "&random"
    }, {
      "line": 108,
      "resolved_path": "&numeric"
    }, {
      "line": 109,
      "resolved_path": "&ratio"
    }, {
      "line": 110,
      "resolved_path": "&cfenv"
    }, {
      "line": 111,
      "resolved_path": "&iosfwd"
    }, {
      "line": 112,
      "resolved_path": "&ios"
    }, {
      "line": 113,
      "resolved_path": "&istream"
    }, {
      "line": 114,
      "resolved_path": "&ostream"
    }, {
      "line": 115,
      "resolved_path": "&iostream"
    }, {
      "line": 116,
      "resolved_path": "&fstream"
    }, {
      "line": 117,
      "resolved_path": "&sstream"
    }, {
      "line": 118,
      "resolved_path": "&strstream"
    }, {
      "line": 119,
      "resolved_path": "&iomanip"
    }, {
      "line": 120,
      "resolved_path": "&streambuf"
    }, {
      "line": 121,
      "resolved_path": "&cstdio"
    }, {
      "line": 122,
      "resolved_path": "&locale"
    }, {
      "line": 123,
      "resolved_path": "&clocale"
    }, {
      "line": 124,
      "resolved_path": "&codecvt"
    }, {
      "line": 125,
      "resolved_path": "&regex"
    }, {
      "line": 126,
      "resolved_path": "&atomic"
    }, {
      "line": 127,
      "resolved_path": "&thread"
    }, {
      "line": 128,
      "resolved_path": "&mutex"
    }, {
      "line": 129,
      "resolved_path": "&shared_mutex"
    }, {
      "line": 130,
      "resolved_path": "&future"
    }, {
      "line": 131,
      "resolved_path": "&condition_variable"
    }, {
      "line": 132,
      "resolved_path": "&filesystem"
    }],
  "skipped_by_preprocessor": [],
  "types": [],
  "funcs": [],
  "vars": []
}
*/
